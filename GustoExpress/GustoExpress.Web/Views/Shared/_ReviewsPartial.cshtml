@using GustoExpress.Data.Models;
@using GustoExpress.Web.ViewModels;
@using Microsoft.AspNetCore.Identity;
@using System.Security.Claims;
@model List<ReviewViewModel>
@inject UserManager<ApplicationUser> UserManager

<h2 class="text-center">Reviews</h2>
<hr />

<section class="row justify-content-center py-3 my-5 rounded-1">
    @foreach (var review in Model)
    {
        <input class="starsInput" type="hidden" value="@review.Stars" />
        <div class="row mt-4 col-lg-8 p-2 container-lg rounded-2 border border-3 border-secondary">
            <div class="col-11 justify-content-center">
                <div>
                    <div class="d-flex">
                        <p class="m-1 fw-bold">@review.User.FirstName @review.User.LastName</p>
                        <div class="text-center starContainer"></div>
                    </div>

                    <div class="mb-3">
                        <p class="mb-0">@review.Title</p>
                    </div>

                    <div class="form-floating">
                        <p class="lead">@review.Text</p>
                    </div>
                </div>
            </div>
            @if (review.UserId == @User.FindFirstValue(ClaimTypes.NameIdentifier))
            {
                <div class="col-1">
                    <form method="post">
                        <button type="submit" asp-action="DeleteReview" asp-controller="Review" class="my-2 btn rounded-circle shadow-sm border-0 bg-light" onclick="return confirm('Are you sure you want to delete your review?')" asp-route-id="@review.Id"><i class="bi bi-trash3-fill"></i></button>
                    </form>
                </div>
            }
        </div>
    }
</section>

<script>
    const starsInputs = document.querySelectorAll('.starsInput');
    const starContainers = document.querySelectorAll('.starContainer');

    starsInputs.forEach((starsInput, index) => {
        const starContainer = starContainers[index];
        const starCount = parseInt(starsInput.value);

        if (starCount <= 5) {
            for (let i = 0; i < starCount; i++) {
                const starSvg = document.createElement('svg');
                starSvg.innerHTML = `<svg version="1.0" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="15px" height="15px" viewBox="0 0 64 64" enable-background="new 0 0 64 64" xml:space="preserve" fill="#fbff0a" stroke="#fbff0a"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <path fill="#fbff14" d="M31.998,2.478c0.279,0,0.463,0.509,0.463,0.509l8.806,18.759l20.729,3.167l-14.999,15.38l3.541,21.701 l-18.54-10.254l-18.54,10.254l3.541-21.701L2,24.912l20.729-3.167l8.798-18.743C31.527,3.002,31.719,2.478,31.998,2.478 M31.998,0 c-0.775,0-1.48,0.448-1.811,1.15l-8.815,18.778L1.698,22.935c-0.741,0.113-1.356,0.632-1.595,1.343 c-0.238,0.71-0.059,1.494,0.465,2.031l14.294,14.657L11.484,61.67c-0.124,0.756,0.195,1.517,0.822,1.957 c0.344,0.243,0.747,0.366,1.151,0.366c0.332,0,0.666-0.084,0.968-0.25l17.572-9.719l17.572,9.719 c0.302,0.166,0.636,0.25,0.968,0.25c0.404,0,0.808-0.123,1.151-0.366c0.627-0.44,0.946-1.201,0.822-1.957l-3.378-20.704 l14.294-14.657c0.523-0.537,0.703-1.321,0.465-2.031c-0.238-0.711-0.854-1.229-1.595-1.343l-19.674-3.006L33.809,1.15 C33.479,0.448,32.773,0,31.998,0L31.998,0z"></path> <path fill="#fbff00" d="M31.998,2.478c0.279,0,0.463,0.509,0.463,0.509l8.806,18.759l20.729,3.167l-14.999,15.38l3.541,21.701 l-18.54-10.254l-18.54,10.254l3.541-21.701L2,24.912l20.729-3.167l8.798-18.743C31.527,3.002,31.719,2.478,31.998,2.478"></path> </g> </g></svg> `;
                starContainer.appendChild(starSvg);
            }
        }
    });
</script>